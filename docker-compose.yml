version: '3'

services:
  node-app:
    build: .
    deploy:
      resources:
        limits:
          cpus: '${DOCKER_NODE_CPUS:-0}'
          memory: '${DOCKER_NODE_MEMORY:-0}'
    env_file:
      - docker.env
    image: shopgao
    ports:
      - '80:3000'
    depends_on:
      - mongodb
      - redis
    networks:
      - node-network
    healthcheck:
      test: curl localhost:3000/live
      interval: '60s'
      timeout: '20s'
      start_period: '5s'
      retries: 5

  mongodb:
    deploy:
      resources:
        limits:
          cpus: '${DOCKER_MONGO_CPUS:-0}'
          memory: '${DOCKER_MONGO_MEMORY:-0}'
    env_file:
      - docker.env
    image: mongo:4.2.1-bionic
    ports:
      - '27017:27017'
    volumes:
      - dbdata:/data/db
    networks:
      - node-network
    restart: '${DOCKER_RESTART_POLICY:-unless-stopped}'

  redis:
    deploy:
      resources:
        limits:
          cpus: '${DOCKER_REDIS_CPUS:-0}'
          memory: '${DOCKER_REDIS_MEMORY:-0}'
    env_file:
      - docker.env
    image: redis:5.0
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    networks:
      - node-network
    restart: '${DOCKER_RESTART_POLICY:-unless-stopped}'

volumes:
  dbdata:

networks:
  node-network:
    driver: bridge
